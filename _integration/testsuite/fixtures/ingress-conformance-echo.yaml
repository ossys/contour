# Copyright Project Contour Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License.  You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
# License for the specific language governing permissions and limitations
# under the License.

# Conformance server source: https://github.com/kubernetes-sigs/ingress-controller-conformance/tree/master/images/echoserver
# Per-commit conformance images: https://console.cloud.google.com/gcr/images/k8s-staging-ingressconformance/GLOBAL

apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name ingress-conformance-echo
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
    spec:
      containers:
      - name: conformance-echo
        image: k8s.gcr.io/ingressconformance/echoserver@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
        env:
        - name: INGRESS_NAME
          value: *name
        - name: SERVICE_NAME
          value: *name
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: http-api
          containerPort: 3000
        readinessProbe:
          httpGet:
            path: /health
            port: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: &name ingress-conformance-echo
spec:
  ports:
  - name: http
    port: 80
    targetPort: http-api
  selector:
    app.kubernetes.io/name: *name

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name ingress-conformance-echo-tls
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: *name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: *name
    spec:
      containers:
      - name: conformance-echo
        image: k8s.gcr.io/ingressconformance/echoserver@sha256:9b34b17f391f87fb2155f01da2f2f90b7a4a5c1110ed84cb5379faa4f570dc52
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: INGRESS_NAME
          value: *name
        - name: SERVICE_NAME
          value: *name
        - name: TLS_SERVER_CERT
          value: /run/secrets/certs/tls.crt
        - name: TLS_SERVER_PRIVKEY
          value: /run/secrets/certs/tls.key
        - name: TLS_CLIENT_CACERTS
          value: /run/secrets/certs/ca.crt
        ports:
        - name: http-api
          containerPort: 3000
        - name: https-api
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
        volumeMounts:
          - mountPath: /run/secrets/certs/
            name: backend-server-cert
            readOnly: true
      volumes:
      - name: backend-server-cert
        secret:
          secretName: backend-server-cert

---

apiVersion: v1
kind: Service
metadata:
  name: &name ingress-conformance-echo-tls
  annotations:
    projectcontour.io/upstream-protocol.tls: "443"
spec:
  ports:
  - name: http
    port: 80
    targetPort: http-api
  - name: https
    port: 443
    targetPort: https-api
  selector:
    app.kubernetes.io/name: *name
